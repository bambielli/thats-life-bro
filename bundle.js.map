{"version":3,"sources":["webpack:///webpack/bootstrap df17069a2435e3c68e94","webpack:///./main.js","webpack:///./game-of-life.js","webpack:///./node_modules/surrounding-coordinates/index.js"],"names":["generation","resetView","table","document","getElementById","firstChild","removeChild","classList","add","remove","window","generateGrid","n","value","isNaN","parseInt","tbody","createElement","rowNum","row","generateRow","appendChild","parseId","str","split","map","item","numCols","tableRow","colNum","col","setAttribute","onclick","cell","id","alive","toggleAlive","nextGeneration","diff","next","length","intervalId","stop","updateGrid","forEach","coord","x","y","isAlive","autoRun","setInterval","clearInterval","undefined","LifeCoordinate","call","prototype","Object","create","constructor","toString","display","Generation","state","newDeadState","push","findSurroundingLivingCoordinates","coordinate","surroundingCoords","findSurroundingCoordinates","livingCoords","activeCoord","prettyPrint","stringifiedState","console","nextGen","module","exports","Coordinate","matrixSize","surroundingCoordinates","filter"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df17069a2435e3c68e94","import { Generation, LifeCoordinate } from './game-of-life';\n\nlet generation;\n\nfunction resetView() {\n    const table = document.getElementById('grid');\n    // remove old grid, if it exists\n    while(table.firstChild) {\n        table.removeChild(table.firstChild);\n    }\n    document.getElementById('stable').classList.add('hidden');\n    document.getElementById('nextbtn').classList.remove('hidden');\n    document.getElementById('go').classList.remove('hidden')\n\n}\n\nwindow.generateGrid = function() {\n    const table = document.getElementById('grid');\n    const n = document.getElementById('grid-size').value;\n    if (n && !isNaN(parseInt(n))) {\n        resetView();\n        generation = new Generation(n);\n        const tbody = document.createElement('tbody');\n        for (let rowNum = 0; rowNum < n; rowNum++) {\n            const row = generateRow(n, rowNum);\n            tbody.appendChild(row);\n        }\n        table.appendChild(tbody);\n    }\n}\n\nfunction parseId(str) {\n    return str.split('-').map((item) => parseInt(item));\n}\n\n// generates nxn matrix of columns\nfunction generateRow (numCols, rowNum) {\n    const tableRow = document.createElement('tr')\n    for (let colNum = 0; colNum < numCols; colNum++) {\n        const col = document.createElement('td')\n        col.classList.add('cell');\n        col.setAttribute('id', `${colNum}-${rowNum}`);\n        // attach a toggle callback\n        col.onclick = function() {\n            const cell = parseId(this.id);\n            const alive = generation.toggleAlive(cell[0], cell[1]);\n            alive ? this.classList.add('alive') : this.classList.remove('alive');\n        }\n        tableRow.appendChild(col);\n    }\n    return tableRow;\n}\n\nwindow.nextGeneration = function() {\n    const diff = generation.next();\n    if (diff.length === 0) {\n        document.getElementById('stable').classList.remove('hidden');\n        if (intervalId) {\n            window.stop();\n        }\n    } else {\n        document.getElementById('stable').classList.add('hidden');\n        updateGrid(diff);\n    }\n}\n\n// called after nextGeneration is generated, to update the dom to match new state of the world.\n// more efficient would be if next() returned only the cells that needed to update.\nfunction updateGrid(diff) {\n    // grab the table, iterate through coords, update table with coord stuff\n    const table = document.getElementById('grid');\n    diff.forEach((coord) => {\n        const cell = document.getElementById(`${coord.x}-${coord.y}`);\n        coord.isAlive ? cell.classList.add('alive') : cell.classList.remove('alive');\n    })\n}\n\nlet intervalId;\n\nwindow.autoRun = function () {\n    intervalId = setInterval(function() {\n       window.nextGeneration();\n    }, 500)\n    document.getElementById('stop').classList.remove('hidden')\n    document.getElementById('nextbtn').classList.add('hidden');\n    document.getElementById('go').classList.add('hidden')\n}\n\nwindow.stop = function () {\n    clearInterval(intervalId);\n    intervalId = undefined;\n    document.getElementById('stop').classList.add('hidden')\n    document.getElementById('go').classList.remove('hidden')\n    document.getElementById('nextbtn').classList.remove('hidden');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./main.js","/**\n * Game of life rules:\n    1. If a live cell in the grid is bordered by fewer than 2 neighbors, it dies in next generation (underpopulation)\n    2. If a live cell in the grid is bordered by 2 or 3 neighbors, it lives to the next generation\n    3. If a live cell is bordered by more than 3 neighbors, it dies (overpopulation)\n    4. If a dead cell is bordered by exactly 3 neighbors, it becomes a live cell (reproduction)\n\n    Initial pattern constitutes the “seed” of the system. Generation next is created by applying the above rules simultaneously to every cell in the seed to come up with the next generation.\n    In other words, the order of calculation of cells for a new generation cannot effect whether a cell lives or dies for the gen++ calculation.\n\n    My initial thoughts for how to model this game:\n\n    The grid can be modeled like a coordinate system, each square representing a single coordinate.\n    Class Coordinate(x, y, isAlive) <-- I think livingNeighbors will be calculated on demand.\n\n    Need some method for returning the list of valid neighbors for a coordinate. My coordinate package does this already!\n\n    Shouldn't pre-compute all possible generations... we should use some sort of generator-like functionality\n    that we can request the .next() generation from. Generator can store the current generation, produce the next one,\n    and overwrite the previous one.\n */\n\nimport Coordinate from 'surrounding-coordinates'; // generic coordinate class with x, y fields and getSurroundingCoordinates method on prototype\n\n/**\n * LifeCoordinate class\n * @param {number} x\n * @param {number} y\n * @param {boolean} isAlive\n */\nfunction LifeCoordinate(x, y, isAlive) {\n    Coordinate.call(this, x, y);\n    this.isAlive = isAlive;\n}\nLifeCoordinate.prototype = Object.create(Coordinate.prototype);\nLifeCoordinate.prototype.constructor = LifeCoordinate;\nLifeCoordinate.prototype.toString = function() {\n    const display = this.isAlive ? 'TRUE' : '-'\n    return `${display}`\n}\n\n\n\n/**\n * GENERATION CLASS\n */\nfunction Generation(n) {\n    this.state = this.newDeadState(n)\n}\n\nGeneration.prototype.newDeadState = function (n) {\n    const newDeadState = [];\n    for (let y = 0; y < n; y++) {\n        const row = [];\n        for (let x = 0; x < n; x++) {\n            row.push(new LifeCoordinate(x, y, false)); // all squares start as dead\n        }\n        newDeadState.push(row);\n    }\n    return newDeadState;\n}\n\nGeneration.prototype.findSurroundingLivingCoordinates = function (coordinate) {\n    const surroundingCoords = coordinate.findSurroundingCoordinates(this.state.length);\n    const livingCoords = [];\n    surroundingCoords.forEach((coord) => {\n        const activeCoord = this.state[coord.y][coord.x];\n        if (activeCoord.isAlive) {\n            livingCoords.push(activeCoord);\n        }\n    });\n    return livingCoords;\n\n}\n\nGeneration.prototype.prettyPrint = function() {\n    const stringifiedState = this.state.map((row) => {\n        return row.map((col) => {\n            return col.toString();\n        })\n    });\n    console.table(stringifiedState);\n}\n\nGeneration.prototype.next = function () {\n    // get a fresh dead copy of the world\n    const nextGen = this.newDeadState(this.state.length);\n    const diff = [];\n    // iterate through all items in the world, and check to see if the cell lives or dies.\n    this.state.forEach((row) => {\n        row.forEach((coord) => {\n            const livingCoords = this.findSurroundingLivingCoordinates(coord);\n            if (livingCoords.length < 2 || livingCoords.length > 3) { // underpopulation\n                if (coord.isAlive !== false) {\n                    diff.push(nextGen[coord.y][coord.x]);\n                }\n            } else if (livingCoords.length === 3) { // reproduction\n                if (coord.isAlive !== true) {\n                    diff.push(nextGen[coord.y][coord.x]);\n                }\n                nextGen[coord.y][coord.x].isAlive = true;\n            } else { // stability\n                nextGen[coord.y][coord.x].isAlive = coord.isAlive;\n            }\n        });\n    });\n\n    this.state = nextGen;\n    return diff;\n}\n\nGeneration.prototype.toggleAlive = function (x, y) {\n    this.state[y][x].isAlive = !this.state[y][x].isAlive;\n    this.prettyPrint();\n    return this.state[y][x].isAlive;\n}\n\nmodule.exports = {\n    Generation,\n    LifeCoordinate\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./game-of-life.js","/**\n * @function Coordinate - a Coordinate class, representing the x,y coordinates of a square in a 2d matrix\n * @param {integer} x\n * @param {integer} y\n * @return {Array<Coordinate>}\n */\nfunction Coordinate (x, y) {\n    this.x = x;\n    this.y = y;\n}\n\n/**\n * @function findSurroundingCoordinates - returns array of valid coordinates surrounding the given coordinate in a square matrix\n * @param {integer} matrixSize - size of your square matrix\n * @return {Array<Coordinate>}\n */\nCoordinate.prototype.findSurroundingCoordinates = function (matrixSize) {\n    const surroundingCoordinates = [\n        new Coordinate(this.x - 1, this.y - 1),\n        new Coordinate(this.x, this.y - 1),\n        new Coordinate(this.x + 1, this.y - 1),\n        new Coordinate(this.x - 1, this.y),\n        new Coordinate(this.x + 1, this.y),\n        new Coordinate(this.x - 1, this.y + 1),\n        new Coordinate(this.x, this.y + 1),\n        new Coordinate(this.x + 1, this.y + 1)\n    ];\n\n    // filters out coordinates that are not valid (i.e. outside the bounds of the matrix)\n    return surroundingCoordinates.filter((item) => {\n        if (item.x >= 0 && item.y >= 0 && item.x < matrixSize && item.y < matrixSize) {\n            return item;\n        }\n    });\n}\n\nexport default Coordinate;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/surrounding-coordinates/index.js"],"sourceRoot":""}